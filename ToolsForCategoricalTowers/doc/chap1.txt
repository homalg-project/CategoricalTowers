  
  [1X1 [33X[0;0YTools[133X[101X
  
  
  [1X1.1 [33X[0;0YTools[133X[101X
  
  [1X1.1-1 SET_RANGE_CATEGORY_Of_HOMOMORPHISM_STRUCTURE[101X
  
  [33X[1;0Y[29X[2XSET_RANGE_CATEGORY_Of_HOMOMORPHISM_STRUCTURE[102X( [3XC[103X, [3XH[103X ) [32X operation[133X
  
  [33X[0;0YThe  input are two categories [3XC[103X and [3XH[103X. There is not output but the following
  side effects are applied to [3XC[103X:[133X
  
  [30X    [33X[0;6Y[10XSetRangeCategoryOfHomomorphismStructure[110X( [3XC[103X, [3XH[103X )[133X
  
  [30X    [33X[0;6Y[10XSetIsEquippedWithHomomorphismStructure[110X( [3XC[103X, [10Xtrue[110X )[133X
  
  [33X[0;0YFurthermore, if [10XIsCategoryWithDecidableLifts[110X( [3XH[103X ) then[133X
  
  [30X    [33X[0;6Y[10XSetIsCategoryWithDecidableLifts[110X( [3XC[103X, [10Xtrue[110X )[133X
  
  [30X    [33X[0;6Y[10XSetIsCategoryWithDecidableColifts[110X( [3XC[103X, [10Xtrue[110X )[133X
  
  [33X[0;0YAn  error  is raised if [10XRangeCategoryOfHomomorphismStructure[110X( [3XC[103X ) is already
  set.[133X
  
  [1X1.1-2 ListKnownDoctrines[101X
  
  [33X[1;0Y[29X[2XListKnownDoctrines[102X( [3Xarg[103X ) [32X function[133X
  [6XReturns:[106X  [33X[0;10Ya list[133X
  
  [33X[0;0YThe function takes no arguments and returns the list of known doctrines.[133X
  
  [1X1.1-3 ListMethodsOfDoctrine[101X
  
  [33X[1;0Y[29X[2XListMethodsOfDoctrine[102X( [3Xdoctrine_name[103X ) [32X function[133X
  [6XReturns:[106X  [33X[0;10Ya list[133X
  
  [33X[0;0YThe  argument  [3Xdoctrine_name[103X is a string which is a name of a valid doctrine
  in the [10XListKnownDoctrines[110X().[133X
  
  [1X1.1-4 DummyCategoryInDoctrines[101X
  
  [33X[1;0Y[29X[2XDummyCategoryInDoctrines[102X( [3Xdoctrine_names[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya [5XCAP[105X category[133X
  
  [33X[0;0YThe  argument is a nonempty list [3Xdoctrine_names[103X of strings of doctrine names
  and the output is a dummy category created using [10XDummyCategory[110X which lies in
  the given doctrine.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XLoadPackage( "ToolsForCategoricalTowers", false );[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XD1 := DummyCategoryInDoctrines( "IsAbCategory" );[127X[104X
    [4X[28XDummyCategoryInDoctrines( [ "IsAbCategory" ] )[128X[104X
    [4X[25Xgap>[125X [27XDisplay( D1 );[127X[104X
    [4X[28XA CAP category with name DummyCategoryInDoctrines( [ "IsAbCategory" ] ):[128X[104X
    [4X[28X[128X[104X
    [4X[28X10 primitive operations were used to derive 21 operations for this category[128X[104X
    [4X[28Xwhich algorithmically[128X[104X
    [4X[28X* IsAbCategory[128X[104X
    [4X[25Xgap>[125X [27XD2 := DummyCategoryInDoctrines( [ "IsAbCategory", "IsAbelianCategory" ] );[127X[104X
    [4X[28XDummyCategoryInDoctrines( [ "IsAbelianCategory" ] )[128X[104X
    [4X[25Xgap>[125X [27XDisplay( D2 );[127X[104X
    [4X[28XA CAP category with name DummyCategoryInDoctrines( [ "IsAbelianCategory" ] ):[128X[104X
    [4X[28X[128X[104X
    [4X[28X26 primitive operations were used to derive 284 operations for this category[128X[104X
    [4X[28Xwhich algorithmically[128X[104X
    [4X[28X* IsAbelianCategory[128X[104X
  [4X[32X[104X
  
  
  [1X1.2 [33X[0;0YProperties[133X[101X
  
  [1X1.2-1 IsObjectFiniteCategory[101X
  
  [33X[1;0Y[29X[2XIsObjectFiniteCategory[102X( [3XC[103X ) [32X property[133X
  [6XReturns:[106X  [33X[0;10Y[9Xtrue[109X or [9Xfalse[109X[133X
  
  [33X[0;0YThe (evil) property of [3XC[103X being a category with finitely many objects.[133X
  
  [1X1.2-2 IsFiniteCategory[101X
  
  [33X[1;0Y[29X[2XIsFiniteCategory[102X( [3XC[103X ) [32X property[133X
  [6XReturns:[106X  [33X[0;10Y[9Xtrue[109X or [9Xfalse[109X[133X
  
  [33X[0;0YThe (evil) property of [3XC[103X being a finite category.[133X
  
  [1X1.2-3 IsEquivalentToFiniteCategory[101X
  
  [33X[1;0Y[29X[2XIsEquivalentToFiniteCategory[102X( [3XC[103X ) [32X property[133X
  [6XReturns:[106X  [33X[0;10Y[9Xtrue[109X or [9Xfalse[109X[133X
  
  [33X[0;0YThe property of [3XC[103X being equivalent to a finite category.[133X
  
  
  [1X1.3 [33X[0;0YAttributes[133X[101X
  
  [1X1.3-1 SetOfObjectsOfCategory[101X
  
  [33X[1;0Y[29X[2XSetOfObjectsOfCategory[102X( [3XC[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ya list of [5XCAP[105X category objects[133X
  
  [33X[0;0YReturn a duplicate free list of objects of the category [3XC[103X.[133X
  
  [1X1.3-2 SetOfObjects[101X
  
  [33X[1;0Y[29X[2XSetOfObjects[102X( [3XC[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ya list of [5XCAP[105X category objects[133X
  
  [33X[0;0YReturn a duplicate free list of objects of the category [3XC[103X. The corresponding
  [5XCAP[105X operation is [10XSetOfObjectsOfCategory[110X.[133X
  
  [1X1.3-3 SetOfMorphismsOfFiniteCategory[101X
  
  [33X[1;0Y[29X[2XSetOfMorphismsOfFiniteCategory[102X( [3XC[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ya list of a [5XCAP[105X category morphisms[133X
  
  [33X[0;0YReturn a duplicate free list of morphisms of the finite category [3XC[103X.[133X
  
  [1X1.3-4 SetOfMorphisms[101X
  
  [33X[1;0Y[29X[2XSetOfMorphisms[102X( [3XC[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ya list of [5XCAP[105X category objects[133X
  
  [33X[0;0YReturn  a  duplicate  free  list  of morphisms of the finite category [3XC[103X. The
  corresponding [5XCAP[105X operation is [10XSetOfMorphismsOfFiniteCategory[110X.[133X
  
  
  [1X1.4 [33X[0;0YFunctors[133X[101X
  
  [1X1.4-1 CovariantHomFunctor[101X
  
  [33X[1;0Y[29X[2XCovariantHomFunctor[102X( [3Xo[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ya [5XCAP[105X functor[133X
  
  [33X[0;0YThe  input  is  an object [3Xo[103X in a category [23XC[123X. The output is the covariant Hom
  functor      [23X\mathrm{Hom}[123X([3Xo[103X,-)      from      the      category     [23XC[123X     to
  [10XRangeCategoryOfHomomorphismStructure[110X( [3XC[103X ).[133X
  
  [1X1.4-2 GlobalSectionFunctor[101X
  
  [33X[1;0Y[29X[2XGlobalSectionFunctor[102X( [3XC[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ya [5XCAP[105X functor[133X
  
  [33X[0;0YReturns  the  global  section  functor [23X\mathrm{Hom}(1,-)[123X from the category [3XC[103X
  with terminal object [23X1[123X to [10XRangeCategoryOfHomomorphismStructure[110X( [3XC[103X ).[133X
  
  
  [1X1.5 [33X[0;0YCell as evaluatable string[133X[101X
  
  [1X1.5-1 DatumOfCellAsEvaluatableString[101X
  
  [33X[1;0Y[29X[2XDatumOfCellAsEvaluatableString[102X( [3Xc[103X, [3Xlist_of_evaluatable_strings[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya string[133X
  
  [33X[0;0YThe arguments is a category cell [3Xc[103X and a list [3Xlist_of_evaluatable_strings[103X of
  string  all which must be evalutable with [10XEvalString[110X. The output is a string
  [10Xstr[110X such that[133X
  
  [30X    [33X[0;6Y[10XEvalString[110X( [10Xstr[110X ) = ObjectDatum( [3Xc[103X ) if [3Xc[103X is a category object, or[133X
  
  [30X    [33X[0;6Y[10XEvalString[110X( [10Xstr[110X ) = MorphismDatum( [3Xc[103X ) if [3Xc[103X is a category morphism.[133X
  
  [33X[0;0YThe  output  string  must,  apart  from  the  brackets,  only consist of the
  substrings  "[10XObjectConstructor[110X",  "[10XMorphismConstructor[110X"  and  the  string in
  [3Xlist_of_evaluatable_strings[103X.[133X
  
  [1X1.5-2 CellAsEvaluatableString[101X
  
  [33X[1;0Y[29X[2XCellAsEvaluatableString[102X( [3Xc[103X, [3Xlist_of_evaluatable_strings[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya string[133X
  
  [33X[0;0YThe arguments is a category cell [3Xc[103X and a list [3Xlist_of_evaluatable_strings[103X of
  string  all which must be evalutable with [10XEvalString[110X. The output is a string
  [10Xstr[110X such that[133X
  
  [30X    [33X[0;6YIsEqualForObjects(  [10XEvalString[110X(  [10Xstr[110X ), [3Xc[103X ) if [3Xc[103X is a category object,
        or[133X
  
  [30X    [33X[0;6YIsEqualForMorphismsOnMor(  [10XEvalString[110X(  [10Xstr[110X  ), [3Xc[103X ) if [3Xc[103X is a category
        morphism.[133X
  
  [33X[0;0YThe  output  string  must,  apart  from  the  brackets,  only consist of the
  substrings  "[10XObjectConstructor[110X",  "[10XMorphismConstructor[110X"  and  the  string in
  [3Xlist_of_evaluatable_strings[103X.[133X
  
