# SPDX-License-Identifier: GPL-2.0-or-later
# FpCategories: Finitely presented categories by generating quivers and relations
#
# Declarations
#

#! @Chapter Quotients of path categories

####################################
#
#! @Section GAP categories
#
####################################

#! @Description
#!  The &GAP; category of quotients of path categories.
DeclareCategory( "IsQuotientOfPathCategory",
        IsQuotientCategory );

#! @Description
#!  The &GAP; category of objects in quotients path categories.
DeclareCategory( "IsQuotientOfPathCategoryObject",
        IsQuotientCategoryObject );

#! @Description
#!  The &GAP; category of morphisms in quotients of path categories.
DeclareCategory( "IsQuotientOfPathCategoryMorphism",
        IsQuotientCategoryMorphism );

####################################
#
#! @Section Attributes
#
####################################

#! @Description
#!  Returns the opposite category of a quotient <A>qC</A> of a path category $C$.
#! @Arguments qC
#! @Returns a quotient of a path category
DeclareAttribute( "OppositeQuotientOfPathCategory", IsQuotientOfPathCategory );

#! @Arguments C
DeclareAttribute( "CategoryFromNerveData", IsQuotientOfPathCategory );

#! @Description
#!  Returns the generators of the underlying two-sided ideal of morphisms.
#! @Arguments qC
#! @Returns a dense list
DeclareAttribute( "DefiningRelations", IsQuotientOfPathCategory );

DeclareAttribute( "RelationsAmongGeneratingMorphisms",
        IsQuotientOfPathCategory );

#! @Description
#!  Returns the reduced Groebner basis of the underlying two-sided ideal of morphisms.
#! @Arguments qC
#! @Returns a dense list
DeclareAttribute( "GroebnerBasisOfDefiningRelations", IsQuotientOfPathCategory );

#! @Description
#!  Returns the index of the object.
#! @Arguments obj
#! @Returns an integer
DeclareAttribute( "ObjectIndex", IsQuotientOfPathCategoryObject );

#! @Description
#!  The input is a morphism <A>alpha</A> in the quotient category <A>qC</A> of a path category <C>C</C>.
#!  The output is a canonical representative of <A>alpha</A> in <C>C</C>. Equal morphisms in <A>qC</A> have the same
#!  canonical representative.
#! @Arguments alpha
#! @Returns a &CAP; morphism
DeclareAttribute( "CanonicalRepresentative", IsQuotientOfPathCategoryMorphism );

#! @Description
#!  Assigns the objects of <A>qC</A> to global variables.
#!  Names of the variables are the concatenation of <A>str</A> with the labels of the objects.
#!  The default value of <A>str</A> is the empty string.
#! @Arguments qC [, str]
#! @Returns nothing
DeclareOperation( "AssignSetOfObjects", [ IsQuotientOfPathCategory, IsString ] );

#! @Description
#!  Assigns the generating morphisms of <A>qC</A> to global variables.
#!  Names of the variables are the concatenation of <A>str</A> with the labels of the generating morphisms.
#!  The default value of <A>str</A> is the empty string.
#! @Arguments qC [, str]
#! @Returns nothing
DeclareOperation( "AssignSetOfGeneratingMorphisms", [ IsQuotientOfPathCategory, IsString ] );

DeclareAttribute( "DecompositionIndicesOfMorphism",
        IsQuotientOfPathCategoryMorphism );

DeclareAttribute( "DecompositionOfMorphismInCategory",
        IsQuotientOfPathCategoryMorphism );

####################################
#
#! @Section Constructors
#
####################################

if false then
#! @Description
#!  Returns the quotient category of <A>C</A> by the two-sided ideal of morphisms generated by <A>rels</A>.
#! @Arguments C, rels
#! @Returns a &CAP; category
DeclareOperation( "QuotientCategory", [ IsPathCategory, IsDenseList ] );
fi;

#! @InsertChunk PathCategory
#! @InsertChunk LinearClosureOfPathCategory
